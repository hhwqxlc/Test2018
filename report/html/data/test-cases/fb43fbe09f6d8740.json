{
  "uid" : "fb43fbe09f6d8740",
  "name" : "Test.test001",
  "fullName" : "test_aa.Test.test001",
  "historyId" : "26b43042122647b5adb762e9b18c30c6",
  "time" : {
    "start" : 1534575376247,
    "stop" : 1534575376317,
    "duration" : 70
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 0",
  "statusTrace" : "self = <test_aa.Test object at 0x0000000003AC98D0>\n\n    @pytest.allure.severity(pytest.allure.severity_level.CRITICAL)\n    @allure.step('我是测试步骤001')\n    def test001(self):\n        allure.attach('执行步骤', '我是测试步骤001的描述～～～')\n        print(\"我被执行了\")\n>       assert 0\nE       assert 0\n\nScripts\\test_aa.py:11: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 0",
    "statusTrace" : "self = <test_aa.Test object at 0x0000000003AC98D0>\n\n    @pytest.allure.severity(pytest.allure.severity_level.CRITICAL)\n    @allure.step('我是测试步骤001')\n    def test001(self):\n        allure.attach('执行步骤', '我是测试步骤001的描述～～～')\n        print(\"我被执行了\")\n>       assert 0\nE       assert 0\n\nScripts\\test_aa.py:11: AssertionError",
    "steps" : [ {
      "name" : "我是测试步骤001",
      "time" : {
        "start" : 1534575376250,
        "stop" : 1534575376273,
        "duration" : 23
      },
      "status" : "failed",
      "statusMessage" : "self = <test_aa.Test object at 0x0000000003AC98D0>\n\n    @pytest.allure.severity(pytest.allure.severity_level.CRITICAL)\n    @allure.step('我是测试步骤001')\n    def test001(self):\n        allure.attach('执行步骤', '我是测试步骤001的描述～～～')\n        print(\"我被执行了\")\n>       assert 0\nE       assert 0\n\nScripts\\test_aa.py:11: AssertionError",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "c96ad29f037bca42",
        "name" : "执行步骤",
        "source" : "c96ad29f037bca42.txt",
        "type" : "text/plain",
        "size" : 39
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "host",
    "value" : "USER-20180311ZM"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "thread",
    "value" : "7648-MainThread"
  }, {
    "name" : "suite",
    "value" : "test_aa"
  }, {
    "name" : "testClass",
    "value" : "test_aa"
  }, {
    "name" : "testMethod",
    "value" : "Test.test001"
  }, {
    "name" : "package",
    "value" : "test_aa"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "fb43fbe09f6d8740.json",
  "parameterValues" : [ ]
}